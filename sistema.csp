-- ** TIPOS E DADOS ** --
id = {1..3}
origem = {1..5}
destino = {1..4}


-- ** CANAIS/EVENTOS ** --

channel recebeChamado : origem
channel recebeCliente : destino
channel aceitaChamado, rejeitaChamado, chegaNoDestino


-- ** PROCESSOS ** --

TAXI(id) = 
		
		recebeChamado?origem -> 
				
		((aceitaChamado -> DESLOCAMENTO(id, 0, origem);
		
		recebeCliente?destino -> DESLOCAMENTO(id, 0, destino);
		
		chegaNoDestino -> TAXI(id))
	[]		
	  	(rejeitaChamado -> TAXI(id)))									
			  		
DESLOCAMENTO(taxi, origem, destino) = 
		
		if origem == destino then 
			SKIP
		else 
			DESLOCAMENTO(taxi, origem + 1, destino)
			

-- ** SYNC ** --		
		
TAXIS = ||| i: id @ TAXI(i)


-- ** ASSERTS ** --

assert TAXIS :[deadlock free]
assert TAXIS :[deterministic]
