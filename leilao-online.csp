------------------------------------------------------------------------
-- TIPOS E DADOS
------------------------------------------------------------------------
N = 3
V = 4
id_comprador = { 1..(N+1) }
id_vendedor = { 1..N }
datatype produto = notebook | tablet | Nil
valor = { V }

------------------------------------------------------------------------
-- CANAIS
------------------------------------------------------------------------

channel vender : id_vendedor.produto.valor
channel comprar : id_comprador.produto
channel getUltimoLance : valor
channel darLance

------------------------------------------------------------------------
-- COMPRADOR(ES) E VENDEDOR(ES)
------------------------------------------------------------------------

COMPRADOR(id, produto) = 
		if produto == Nil then 
			SKIP 
		else 
			comprar!id!produto -> COMPRADOR(id, produto)

COMPRADORES = ||| comprador:id_comprador, p:produto @ COMPRADOR(comprador, p) 

assert COMPRADORES :[deadlock free] 
assert COMPRADORES :[deterministic] 


VENDEDOR(id, produto, valor) = 
		if produto == Nil then
			SKIP
		else
			vender!id!produto!valor -> VENDEDOR(id, produto, valor)	

VENDEDORES = ||| id:id_vendedor, p:produto, v:valor @ VENDEDOR(id, p, v)

assert VENDEDORES :[deadlock free] 
assert VENDEDORES :[deterministic] 

------------------------------------------------------------------------
-- LEILAO
------------------------------------------------------------------------

queroComprarProduto(pv, pc) = 
		if pv == pc then 
			True 
		else 
			False

verificarLance(lance, valorDoProduto) = 
		if lance == valorDoProduto then 
			True 
		else 
			False 

LEILAO(id, produto, valorDoProduto) =
		vender?id_?produto_?valor -> 
			(
				if produto == Nil then
					LEILAO(id_, produto_, valor)
				else
					LEILAO(id, produto, valorDoProduto)
			)
	[]
		comprar?comprador?prod -> 
			(
				if queroComprarProduto(produto, prod) then
					darLance -> getUltimoLance?lance ->
					if verificarLance(valorDoProduto, lance) then
						SKIP
					else
						LEILAO(id, produto, valorDoProduto)
				else
					LEILAO(id, produto, valorDoProduto)
			)
						  		  	
LEILOES = ||| id:id_vendedor @ LEILAO(id, Nil, 0)

assert LEILOES :[deadlock free]
assert LEILOES :[deterministic]

STATUS(lance) =
		getUltimoLance?lance -> STATUS(lance)
	[]
		darLance -> if lance < V then
						STATUS(lance+1)
					else
						STATUS(lance)

assert STATUS(0) :[deadlock free]
assert STATUS(0) :[deterministic]

------------------------------------------------------------------------
-- ASSERTS
------------------------------------------------------------------------ 

LS = LEILOES [|{|getUltimoLance, darLance|}|] STATUS(0)
LS_C = LS [{|comprar, darLance|}||{|comprar|}] COMPRADORES
LS_C_V = LS_C [{|comprar|}||{|comprar|}] VENDEDORES
SISTEMA = LS_C_V

assert SISTEMA :[deadlock free] 
assert SISTEMA :[deterministic] 
